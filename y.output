State 0 conflicts: 1 shift/reduce
State 50 conflicts: 10 shift/reduce
State 92 conflicts: 4 shift/reduce
State 112 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers functions

    2 functions: %empty
    3          | functions function

    4 function_param_list: %empty
    5                    | datatype ID
    6                    | datatype ID ',' function_param_list

    7 function: datatype ID '(' function_param_list ')' '{' body return '}'

    8 headers: %empty
    9        | headers INCLUDE
   10        | INCLUDE

   11 datatype: INT
   12         | FLOAT
   13         | CHAR
   14         | VOID

   15 else: ELSE '{' body '}'
   16     | ELSE body
   17     | %empty

   18 body: body body
   19     | statement ';'
   20     | PRINTF '(' STR ',' ID ')' ';'
   21     | SCANF '(' STR ',' '&' ID ')' ';'
   22     | IF '(' condition ')' '{' body '}' else
   23     | FOR '(' statement ';' condition ';' statement ')' '{' body '}'

   24 condition: value relop value

   25 return: %empty
   26       | RETURN value ';'

   27 value: NUMBER
   28      | ID
   29      | CHARLITERAL

   30 relop: LT
   31      | GT
   32      | LE
   33      | GE
   34      | EQ
   35      | NE

   36 declaration: datatype ID init

   37 assignment: ID '=' expression
   38           | ID

   39 assignment_list: assignment_list ',' assignment
   40                | assignment

   41 statement: declaration
   42          | declaration ',' assignment_list
   43          | assignment_list
   44          | ID relop expression
   45          | ID UNARY
   46          | UNARY ID

   47 expression: expression arithmetic expression
   48           | value
   49           | function_call

   50 function_call: ID '(' value_list ')'

   51 value_list: %empty
   52           | value_list ',' value
   53           | value

   54 arithmetic: ADD
   55           | SUBTRACT
   56           | MULTIPLY
   57           | DIVIDE

   58 init: '=' value
   59     | %empty


Terminals, with rules where they appear

$end (0) 0
'&' (38) 21
'(' (40) 7 20 21 22 23 50
')' (41) 7 20 21 22 23 50
',' (44) 6 20 21 39 42 52
';' (59) 19 20 21 23 26
'=' (61) 37 58
'{' (123) 7 15 22 23
'}' (125) 7 15 22 23
error (256)
PRINTF (258) 20
SCANF (259) 21
INT (260) 11
FLOAT (261) 12
CHAR (262) 13
VOID (263) 14
ID (264) 5 6 7 20 21 28 36 37 38 44 45 46 50
RETURN (265) 26
STR (266) 20 21
NUMBER (267) 27
INCLUDE (268) 9 10
EQ (269) 34
GE (270) 33
GT (271) 31
LE (272) 32
LT (273) 30
NE (274) 35
IF (275) 22
ELSE (276) 15 16
FOR (277) 23
UNARY (278) 45 46
ADD (279) 54
SUBTRACT (280) 55
DIVIDE (281) 57
MULTIPLY (282) 56
CHARLITERAL (283) 29


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
functions (39)
    on left: 2 3, on right: 1 3
function_param_list (40)
    on left: 4 5 6, on right: 6 7
function (41)
    on left: 7, on right: 3
headers (42)
    on left: 8 9 10, on right: 1 9
datatype (43)
    on left: 11 12 13 14, on right: 5 6 7 36
else (44)
    on left: 15 16 17, on right: 22
body (45)
    on left: 18 19 20 21 22 23, on right: 7 15 16 18 22 23
condition (46)
    on left: 24, on right: 22 23
return (47)
    on left: 25 26, on right: 7
value (48)
    on left: 27 28 29, on right: 24 26 48 52 53 58
relop (49)
    on left: 30 31 32 33 34 35, on right: 24 44
declaration (50)
    on left: 36, on right: 41 42
assignment (51)
    on left: 37 38, on right: 39 40
assignment_list (52)
    on left: 39 40, on right: 39 42 43
statement (53)
    on left: 41 42 43 44 45 46, on right: 19 23
expression (54)
    on left: 47 48 49, on right: 37 44 47
function_call (55)
    on left: 50, on right: 49
value_list (56)
    on left: 51 52 53, on right: 50 52
arithmetic (57)
    on left: 54 55 56 57, on right: 47
init (58)
    on left: 58 59, on right: 36


State 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 8 (headers)]
    $default  reduce using rule 8 (headers)

    program  go to state 2
    headers  go to state 3


State 1

   10 headers: INCLUDE .

    $default  reduce using rule 10 (headers)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: headers . functions
    9 headers: headers . INCLUDE

    INCLUDE  shift, and go to state 5

    $default  reduce using rule 2 (functions)

    functions  go to state 6


State 4

    0 $accept: program $end .

    $default  accept


State 5

    9 headers: headers INCLUDE .

    $default  reduce using rule 9 (headers)


State 6

    1 program: headers functions .
    3 functions: functions . function

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    VOID   shift, and go to state 10

    $default  reduce using rule 1 (program)

    function  go to state 11
    datatype  go to state 12


State 7

   11 datatype: INT .

    $default  reduce using rule 11 (datatype)


State 8

   12 datatype: FLOAT .

    $default  reduce using rule 12 (datatype)


State 9

   13 datatype: CHAR .

    $default  reduce using rule 13 (datatype)


State 10

   14 datatype: VOID .

    $default  reduce using rule 14 (datatype)


State 11

    3 functions: functions function .

    $default  reduce using rule 3 (functions)


State 12

    7 function: datatype . ID '(' function_param_list ')' '{' body return '}'

    ID  shift, and go to state 13


State 13

    7 function: datatype ID . '(' function_param_list ')' '{' body return '}'

    '('  shift, and go to state 14


State 14

    7 function: datatype ID '(' . function_param_list ')' '{' body return '}'

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    VOID   shift, and go to state 10

    $default  reduce using rule 4 (function_param_list)

    function_param_list  go to state 15
    datatype             go to state 16


State 15

    7 function: datatype ID '(' function_param_list . ')' '{' body return '}'

    ')'  shift, and go to state 17


State 16

    5 function_param_list: datatype . ID
    6                    | datatype . ID ',' function_param_list

    ID  shift, and go to state 18


State 17

    7 function: datatype ID '(' function_param_list ')' . '{' body return '}'

    '{'  shift, and go to state 19


State 18

    5 function_param_list: datatype ID .
    6                    | datatype ID . ',' function_param_list

    ','  shift, and go to state 20

    $default  reduce using rule 5 (function_param_list)


State 19

    7 function: datatype ID '(' function_param_list ')' '{' . body return '}'

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26

    datatype         go to state 27
    body             go to state 28
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 20

    6 function_param_list: datatype ID ',' . function_param_list

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    VOID   shift, and go to state 10

    $default  reduce using rule 4 (function_param_list)

    function_param_list  go to state 33
    datatype             go to state 16


State 21

   20 body: PRINTF . '(' STR ',' ID ')' ';'

    '('  shift, and go to state 34


State 22

   21 body: SCANF . '(' STR ',' '&' ID ')' ';'

    '('  shift, and go to state 35


State 23

   37 assignment: ID . '=' expression
   38           | ID .
   44 statement: ID . relop expression
   45          | ID . UNARY

    EQ     shift, and go to state 36
    GE     shift, and go to state 37
    GT     shift, and go to state 38
    LE     shift, and go to state 39
    LT     shift, and go to state 40
    NE     shift, and go to state 41
    UNARY  shift, and go to state 42
    '='    shift, and go to state 43

    $default  reduce using rule 38 (assignment)

    relop  go to state 44


State 24

   22 body: IF . '(' condition ')' '{' body '}' else

    '('  shift, and go to state 45


State 25

   23 body: FOR . '(' statement ';' condition ';' statement ')' '{' body '}'

    '('  shift, and go to state 46


State 26

   46 statement: UNARY . ID

    ID  shift, and go to state 47


State 27

   36 declaration: datatype . ID init

    ID  shift, and go to state 48


State 28

    7 function: datatype ID '(' function_param_list ')' '{' body . return '}'
   18 body: body . body

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    RETURN  shift, and go to state 49
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26

    $default  reduce using rule 25 (return)

    datatype         go to state 27
    body             go to state 50
    return           go to state 51
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 29

   41 statement: declaration .
   42          | declaration . ',' assignment_list

    ','  shift, and go to state 52

    $default  reduce using rule 41 (statement)


State 30

   40 assignment_list: assignment .

    $default  reduce using rule 40 (assignment_list)


State 31

   39 assignment_list: assignment_list . ',' assignment
   43 statement: assignment_list .

    ','  shift, and go to state 53

    $default  reduce using rule 43 (statement)


State 32

   19 body: statement . ';'

    ';'  shift, and go to state 54


State 33

    6 function_param_list: datatype ID ',' function_param_list .

    $default  reduce using rule 6 (function_param_list)


State 34

   20 body: PRINTF '(' . STR ',' ID ')' ';'

    STR  shift, and go to state 55


State 35

   21 body: SCANF '(' . STR ',' '&' ID ')' ';'

    STR  shift, and go to state 56


State 36

   34 relop: EQ .

    $default  reduce using rule 34 (relop)


State 37

   33 relop: GE .

    $default  reduce using rule 33 (relop)


State 38

   31 relop: GT .

    $default  reduce using rule 31 (relop)


State 39

   32 relop: LE .

    $default  reduce using rule 32 (relop)


State 40

   30 relop: LT .

    $default  reduce using rule 30 (relop)


State 41

   35 relop: NE .

    $default  reduce using rule 35 (relop)


State 42

   45 statement: ID UNARY .

    $default  reduce using rule 45 (statement)


State 43

   37 assignment: ID '=' . expression

    ID           shift, and go to state 57
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    value          go to state 60
    expression     go to state 61
    function_call  go to state 62


State 44

   44 statement: ID relop . expression

    ID           shift, and go to state 57
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    value          go to state 60
    expression     go to state 63
    function_call  go to state 62


State 45

   22 body: IF '(' . condition ')' '{' body '}' else

    ID           shift, and go to state 64
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    condition  go to state 65
    value      go to state 66


State 46

   23 body: FOR '(' . statement ';' condition ';' statement ')' '{' body '}'

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    VOID   shift, and go to state 10
    ID     shift, and go to state 23
    UNARY  shift, and go to state 26

    datatype         go to state 27
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 67


State 47

   46 statement: UNARY ID .

    $default  reduce using rule 46 (statement)


State 48

   36 declaration: datatype ID . init

    '='  shift, and go to state 68

    $default  reduce using rule 59 (init)

    init  go to state 69


State 49

   26 return: RETURN . value ';'

    ID           shift, and go to state 64
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    value  go to state 70


State 50

   18 body: body . body
   18     | body body .

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26

    PRINTF    [reduce using rule 18 (body)]
    SCANF     [reduce using rule 18 (body)]
    INT       [reduce using rule 18 (body)]
    FLOAT     [reduce using rule 18 (body)]
    CHAR      [reduce using rule 18 (body)]
    VOID      [reduce using rule 18 (body)]
    ID        [reduce using rule 18 (body)]
    IF        [reduce using rule 18 (body)]
    FOR       [reduce using rule 18 (body)]
    UNARY     [reduce using rule 18 (body)]
    $default  reduce using rule 18 (body)

    datatype         go to state 27
    body             go to state 50
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 51

    7 function: datatype ID '(' function_param_list ')' '{' body return . '}'

    '}'  shift, and go to state 71


State 52

   42 statement: declaration ',' . assignment_list

    ID  shift, and go to state 72

    assignment       go to state 30
    assignment_list  go to state 73


State 53

   39 assignment_list: assignment_list ',' . assignment

    ID  shift, and go to state 72

    assignment  go to state 74


State 54

   19 body: statement ';' .

    $default  reduce using rule 19 (body)


State 55

   20 body: PRINTF '(' STR . ',' ID ')' ';'

    ','  shift, and go to state 75


State 56

   21 body: SCANF '(' STR . ',' '&' ID ')' ';'

    ','  shift, and go to state 76


State 57

   28 value: ID .
   50 function_call: ID . '(' value_list ')'

    '('  shift, and go to state 77

    $default  reduce using rule 28 (value)


State 58

   27 value: NUMBER .

    $default  reduce using rule 27 (value)


State 59

   29 value: CHARLITERAL .

    $default  reduce using rule 29 (value)


State 60

   48 expression: value .

    $default  reduce using rule 48 (expression)


State 61

   37 assignment: ID '=' expression .
   47 expression: expression . arithmetic expression

    ADD       shift, and go to state 78
    SUBTRACT  shift, and go to state 79
    DIVIDE    shift, and go to state 80
    MULTIPLY  shift, and go to state 81

    $default  reduce using rule 37 (assignment)

    arithmetic  go to state 82


State 62

   49 expression: function_call .

    $default  reduce using rule 49 (expression)


State 63

   44 statement: ID relop expression .
   47 expression: expression . arithmetic expression

    ADD       shift, and go to state 78
    SUBTRACT  shift, and go to state 79
    DIVIDE    shift, and go to state 80
    MULTIPLY  shift, and go to state 81

    $default  reduce using rule 44 (statement)

    arithmetic  go to state 82


State 64

   28 value: ID .

    $default  reduce using rule 28 (value)


State 65

   22 body: IF '(' condition . ')' '{' body '}' else

    ')'  shift, and go to state 83


State 66

   24 condition: value . relop value

    EQ  shift, and go to state 36
    GE  shift, and go to state 37
    GT  shift, and go to state 38
    LE  shift, and go to state 39
    LT  shift, and go to state 40
    NE  shift, and go to state 41

    relop  go to state 84


State 67

   23 body: FOR '(' statement . ';' condition ';' statement ')' '{' body '}'

    ';'  shift, and go to state 85


State 68

   58 init: '=' . value

    ID           shift, and go to state 64
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    value  go to state 86


State 69

   36 declaration: datatype ID init .

    $default  reduce using rule 36 (declaration)


State 70

   26 return: RETURN value . ';'

    ';'  shift, and go to state 87


State 71

    7 function: datatype ID '(' function_param_list ')' '{' body return '}' .

    $default  reduce using rule 7 (function)


State 72

   37 assignment: ID . '=' expression
   38           | ID .

    '='  shift, and go to state 43

    $default  reduce using rule 38 (assignment)


State 73

   39 assignment_list: assignment_list . ',' assignment
   42 statement: declaration ',' assignment_list .

    ','  shift, and go to state 53

    $default  reduce using rule 42 (statement)


State 74

   39 assignment_list: assignment_list ',' assignment .

    $default  reduce using rule 39 (assignment_list)


State 75

   20 body: PRINTF '(' STR ',' . ID ')' ';'

    ID  shift, and go to state 88


State 76

   21 body: SCANF '(' STR ',' . '&' ID ')' ';'

    '&'  shift, and go to state 89


State 77

   50 function_call: ID '(' . value_list ')'

    ID           shift, and go to state 64
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    $default  reduce using rule 51 (value_list)

    value       go to state 90
    value_list  go to state 91


State 78

   54 arithmetic: ADD .

    $default  reduce using rule 54 (arithmetic)


State 79

   55 arithmetic: SUBTRACT .

    $default  reduce using rule 55 (arithmetic)


State 80

   57 arithmetic: DIVIDE .

    $default  reduce using rule 57 (arithmetic)


State 81

   56 arithmetic: MULTIPLY .

    $default  reduce using rule 56 (arithmetic)


State 82

   47 expression: expression arithmetic . expression

    ID           shift, and go to state 57
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    value          go to state 60
    expression     go to state 92
    function_call  go to state 62


State 83

   22 body: IF '(' condition ')' . '{' body '}' else

    '{'  shift, and go to state 93


State 84

   24 condition: value relop . value

    ID           shift, and go to state 64
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    value  go to state 94


State 85

   23 body: FOR '(' statement ';' . condition ';' statement ')' '{' body '}'

    ID           shift, and go to state 64
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    condition  go to state 95
    value      go to state 66


State 86

   58 init: '=' value .

    $default  reduce using rule 58 (init)


State 87

   26 return: RETURN value ';' .

    $default  reduce using rule 26 (return)


State 88

   20 body: PRINTF '(' STR ',' ID . ')' ';'

    ')'  shift, and go to state 96


State 89

   21 body: SCANF '(' STR ',' '&' . ID ')' ';'

    ID  shift, and go to state 97


State 90

   53 value_list: value .

    $default  reduce using rule 53 (value_list)


State 91

   50 function_call: ID '(' value_list . ')'
   52 value_list: value_list . ',' value

    ','  shift, and go to state 98
    ')'  shift, and go to state 99


State 92

   47 expression: expression . arithmetic expression
   47           | expression arithmetic expression .

    ADD       shift, and go to state 78
    SUBTRACT  shift, and go to state 79
    DIVIDE    shift, and go to state 80
    MULTIPLY  shift, and go to state 81

    ADD       [reduce using rule 47 (expression)]
    SUBTRACT  [reduce using rule 47 (expression)]
    DIVIDE    [reduce using rule 47 (expression)]
    MULTIPLY  [reduce using rule 47 (expression)]
    $default  reduce using rule 47 (expression)

    arithmetic  go to state 82


State 93

   22 body: IF '(' condition ')' '{' . body '}' else

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26

    datatype         go to state 27
    body             go to state 100
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 94

   24 condition: value relop value .

    $default  reduce using rule 24 (condition)


State 95

   23 body: FOR '(' statement ';' condition . ';' statement ')' '{' body '}'

    ';'  shift, and go to state 101


State 96

   20 body: PRINTF '(' STR ',' ID ')' . ';'

    ';'  shift, and go to state 102


State 97

   21 body: SCANF '(' STR ',' '&' ID . ')' ';'

    ')'  shift, and go to state 103


State 98

   52 value_list: value_list ',' . value

    ID           shift, and go to state 64
    NUMBER       shift, and go to state 58
    CHARLITERAL  shift, and go to state 59

    value  go to state 104


State 99

   50 function_call: ID '(' value_list ')' .

    $default  reduce using rule 50 (function_call)


State 100

   18 body: body . body
   22     | IF '(' condition ')' '{' body . '}' else

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26
    '}'     shift, and go to state 105

    datatype         go to state 27
    body             go to state 50
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 101

   23 body: FOR '(' statement ';' condition ';' . statement ')' '{' body '}'

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    VOID   shift, and go to state 10
    ID     shift, and go to state 23
    UNARY  shift, and go to state 26

    datatype         go to state 27
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 106


State 102

   20 body: PRINTF '(' STR ',' ID ')' ';' .

    $default  reduce using rule 20 (body)


State 103

   21 body: SCANF '(' STR ',' '&' ID ')' . ';'

    ';'  shift, and go to state 107


State 104

   52 value_list: value_list ',' value .

    $default  reduce using rule 52 (value_list)


State 105

   22 body: IF '(' condition ')' '{' body '}' . else

    ELSE  shift, and go to state 108

    $default  reduce using rule 17 (else)

    else  go to state 109


State 106

   23 body: FOR '(' statement ';' condition ';' statement . ')' '{' body '}'

    ')'  shift, and go to state 110


State 107

   21 body: SCANF '(' STR ',' '&' ID ')' ';' .

    $default  reduce using rule 21 (body)


State 108

   15 else: ELSE . '{' body '}'
   16     | ELSE . body

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26
    '{'     shift, and go to state 111

    datatype         go to state 27
    body             go to state 112
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 109

   22 body: IF '(' condition ')' '{' body '}' else .

    $default  reduce using rule 22 (body)


State 110

   23 body: FOR '(' statement ';' condition ';' statement ')' . '{' body '}'

    '{'  shift, and go to state 113


State 111

   15 else: ELSE '{' . body '}'

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26

    datatype         go to state 27
    body             go to state 114
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 112

   16 else: ELSE body .
   18 body: body . body

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26

    PRINTF    [reduce using rule 16 (else)]
    SCANF     [reduce using rule 16 (else)]
    INT       [reduce using rule 16 (else)]
    FLOAT     [reduce using rule 16 (else)]
    CHAR      [reduce using rule 16 (else)]
    VOID      [reduce using rule 16 (else)]
    ID        [reduce using rule 16 (else)]
    IF        [reduce using rule 16 (else)]
    FOR       [reduce using rule 16 (else)]
    UNARY     [reduce using rule 16 (else)]
    $default  reduce using rule 16 (else)

    datatype         go to state 27
    body             go to state 50
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 113

   23 body: FOR '(' statement ';' condition ';' statement ')' '{' . body '}'

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26

    datatype         go to state 27
    body             go to state 115
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 114

   15 else: ELSE '{' body . '}'
   18 body: body . body

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26
    '}'     shift, and go to state 116

    datatype         go to state 27
    body             go to state 50
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 115

   18 body: body . body
   23     | FOR '(' statement ';' condition ';' statement ')' '{' body . '}'

    PRINTF  shift, and go to state 21
    SCANF   shift, and go to state 22
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    CHAR    shift, and go to state 9
    VOID    shift, and go to state 10
    ID      shift, and go to state 23
    IF      shift, and go to state 24
    FOR     shift, and go to state 25
    UNARY   shift, and go to state 26
    '}'     shift, and go to state 117

    datatype         go to state 27
    body             go to state 50
    declaration      go to state 29
    assignment       go to state 30
    assignment_list  go to state 31
    statement        go to state 32


State 116

   15 else: ELSE '{' body '}' .

    $default  reduce using rule 15 (else)


State 117

   23 body: FOR '(' statement ';' condition ';' statement ')' '{' body '}' .

    $default  reduce using rule 23 (body)
